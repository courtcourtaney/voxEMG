#N canvas 2070 -1306 1727 1325 10;
#X text 35 42 =============;
#X obj 355 311 sigdelta;
#X text 414 309 <<< calculate differential on input signal;
#X obj 81 174 adc~ 3;
#X obj 301 475 dac~ 1 2;
#X obj 293 279 nfilt;
#X obj 355 337 crunchyduck;
#X obj 293 208 lop~ 5;
#X obj 293 373 *~ 2;
#X obj 355 372 *~ 40;
#X text 35 32 Vox Noise;
#X text 35 62 Filtered white noise for vocal interaction - uses the
differential and direct input from the vocal EMG data, f 67;
#X text 36 93 Based off of the Rubber Duckie (Chris Heinrichs) https://learn.bela.io/tutorials/pure-data/synthesis/rubber-duckie/
, f 67;
#X text 133 166 <<< A0 input vocal EMG voltage;
#X text 429 336 <<< filtered noise using the rubber-duckie abstraction
;
#X text 364 475 <<< play audio from Bela Audio Out;
#X text 348 277 <<< filter white noise on direct input voltage;
#X obj 79 317 adc~ 4;
#X obj 167 446 *~;
#X text 128 316 <<< A1 input mic;
#X text 193 443 <<< sum audio;
#X obj 167 517 audiowrite;
#X obj 189 489 loadbang;
#X obj 83 409 audiowrite;
#X obj 105 381 loadbang;
#X obj 86 272 audiowrite;
#X obj 108 244 loadbang;
#X connect 1 0 6 0;
#X connect 3 0 7 0;
#X connect 3 0 25 0;
#X connect 5 0 8 0;
#X connect 6 0 9 0;
#X connect 7 0 5 0;
#X connect 7 0 1 0;
#X connect 8 0 4 0;
#X connect 8 0 4 1;
#X connect 8 0 18 0;
#X connect 9 0 4 0;
#X connect 9 0 4 1;
#X connect 9 0 18 1;
#X connect 17 0 23 0;
#X connect 18 0 21 0;
#X connect 22 0 21 1;
#X connect 24 0 23 1;
#X connect 26 0 25 1;
